X
?set.seed
install.packages("dplyr")
url<="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
url<=https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(url,destfile="quiz1.csv")
quiz1<-read.csv("quiz1.csv")
head(quiz1)
print(quiz1[quiz1$VAL=24,quiz1$VAL])
quiz1[quiz1$VAL=24,quiz1$VAL]
quiz1[quiz1$VAL==24,quiz1$VAL]
quiz1[quiz1$VAL==24,]
quiz1
head(quiz1)
quiz1[quiz1$VAL==24,]
quiz1[quiz1$VAL==24,VAL]
quiz1[quiz1$VAL==24,quiz1VAL]
quiz1[quiz1$VAL==24,quiz1$VAL]
quiz1[quiz1$VAL==24,"VAL"]
smallquiz1<-quiz1[quiz1$VAL==24,"VAL"]
good<-complete.sets(smallquiz1)
smallquiz1<-smallquiz1[complete.cases(smallquiz1),]
smallquiz1[complete.cases(smallquiz1),]
head(smallquiz1)
smallerquiz1<-complete.cases(smallquiz1)
head(smallerquiz1)
smallquiz1[smallerquiz1,]
smallquiz1[smallerquiz1]
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx"
download.file(url,quiz2.xlsx,mode='wb')
download.file(url,destfile="quiz2.xlsx",mode='wb')
colIndex<-7:15
rowIndex<-18:23
quiz2<-read.xlsx("quiz2.xlsx",sheetInex=1,colIndex=colIndex,rowIndex=rowIndex)
library("xlsx")
quiz2<-read.xlsx("quiz2.xlsx",sheetInex=1,colIndex=colIndex,rowIndex=rowIndex)
quiz2<-read.xlsx("quiz2.xlsx",sheetIndex=1,colIndex=colIndex,rowIndex=rowIndex)
quiz2
dat<-quiz2
sum(dat$Zip*dat$Ext,na.rm=T)
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml"
library(XML)
doc<-xmlTreeParse(url,useInternal=TRUE)
doc<-xmlTreeParse(url)
download.file(url,"quiz2.xml")
quiz2<-xmlInternalTreeParse("quiz2.xml")
quiz2
quiz2[[1]]
rootNode<-xmlRoot(quiz2)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[1]][[1]]
xpathSApply(rootNode,"///zipcode",xmlValue)
answer<-xpathSApply(rootNode,"///zipcode[@class="21231"]",xmlValue)
answer<-xpathSApply(rootNode,"///zipcode",xmlValue)
answer
answer[1]
answer[answer=="21231"]
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url,"quiz5.csv")
library(data.table)
?fread
fread(quiz5.csv)
DT<-fread("quiz5.csv")
DT
sapply(split(DT$pwgtp15,DT$SEX),mean)
tapply(DT$pwgtp15,DT$SEX,mean)
mean(DT$pwgtp15,by=DT$SEX)
rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)
DT[,mean(pwgtp15),by=SEX]
ucscDb<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
library(MySQL)
library("MySQL")
library(mySQL)
library("mySQL")
library("RMySQL")
ucscDb<-dbConnect(MySQL(),user="genome",host="genome-mysql.cse.ucsc.edu")
result<-dbGetQuery(ucscDb,"show databases;")
BDisconnect(ucscDb)
dbDisconnect(ucscDb)
result
hg19<-dbConnect(MySQL(),user="genome",db="hg19",host="genome-mysql.cse.ucsc.edu")
allTables<-dbListTables(hg19)
length(allTables)
allTables[1:5]
dbDisconnect(hg19)
library("swirl")
swirl()
mydf<-read.csv(path2csv,stringsAsFactors=FALSE)
dim()
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran<-tbl_df(mydf)
rm("mydf")
cran
?select
select(cran,ip_id,pakage,country)
select(cran,ip_id,package,country)
5:20
select(cran,r_arch:country)
select(country:r_arch)
select(cran,country:r_arch)
cran
select(cran,-time)
-5:20
-(5:20)
select(cran,-(x:size))
select(cran,(x:size))
select(cran,x:size)
select(cran,X:size)
select(cran,-(X:size)
select(cran,-(X:size))
filter(cran,package=="swirl")
filter(cran,r_version=="3.1.1",country=="US")
?Comparison
filter(cran,country=="IN",r_version<="3.0.2")
filter(cran,country=="US"|country=="IN")
filter(cran,size>100500,r_os=="linux-gnu")
is.na(c(3,5,NA,10))
!is.na(c(3,5,NA,10))
filter(cran,r_version==(!is.na(r_version)))
filter(cran,!is.na(r_version))
cran2<-select(cran,size:ip_id)
arrange(cran2,ip_id)
arrange(cran2,desc(ip_id))
arrange(cran2,package,ip_id)
arrange(cran2,country,desc(r_version),ip_id)
cran3<-select(cran,ip_id,package,size)
cran3
mutate(cran3,size_mb=size/2^20)
mutate(cran3,size_mb=size/2^20,size_gb=size_mb/2^10)
mutate(cran3,correct_size=size-1000)
mutate(cran3,correct_size=size+1000)
sumarize(cran,avg_bytes=mean(size))
summarize(cran,avg_bytes=mean(size))
url<-"https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv"
download.file(url,"q2.csv")
acs<-read.csv("q2.csv")
head(acs)
sqldf("select * from acs where AGEP < 50 and pwgtp1")
library("sqldf")
sqldf("select * from acs where AGEP < 50 and pwgtp1")
head(acs)
sqldf("select * from acs where AGEP < 50")
library(sqldf)
sqldf("select * from acs where AGEP < 50")
tail(acs)
sqldf("select * from acs where AGEP < 50")
#GetData Project Script
#Dale Millar - Riyadh, Saudi Arabia
#Set the working directory
setwd("~/Coursera/GetData/Project")
factor_lookup<-function(activity_level=1){
return (levels(activities)[activity_level])
}
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_train<-read.csv("./train/subject_train.txt",sep="",header=FALSE)
X_train<-read.csv("./train/X_train.txt",sep="",header=FALSE)
y_train<-read.csv("./train/y_train.txt",sep="",header=FALSE)
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_test<-read.csv("./test/subject_test.txt",sep="",header=FALSE)
X_test<-read.csv("./test/X_test.txt",sep="",header=FALSE)
y_test<-read.csv("./test/y_test.txt",sep="",header=FALSE)
#Make the subject_train and subject_test dataframes factors and not integers to help
#with identification.  There are 21 in train group and 9 in test group - total 30 as per README.txt
#subject_test[,1]<-as.factor(subject_test[,1])
#subject_train[,1]<-as.factor(subject_train[,1])
#Make y_train factors to reflect that they refer to activity levels
#y_train[,1]<-as.factor(y_train[,1])
#y_test[,1]<-as.factor(y_test[,1])
#col bind y_train to X_train and put in traintemp variable
traintemp<-cbind(y_train,X_train)
#and now col bind subject_train to traintemp
traintemp<-cbind(subject_train,traintemp)
#col bind y_test to X_test and put in testtemp variable
testtemp<-cbind(y_test,X_test)
#and now col bind subject_test to testtemp
testtemp<-cbind(subject_test,testtemp)
#and bind rows together into combotemp dataframe
combotemp<-rbind(traintemp,testtemp)
#renumber columns
colnames(combotemp)<-1:ncol(combotemp)
make.names(colnames(combotemp),unique=FALSE, allow_=TRUE)
#GetData Project Script
#Dale Millar - Riyadh, Saudi Arabia
#Set the working directory
setwd("~/Coursera/GetData/Project")
factor_lookup<-function(activity_level=1){
return (levels(activities)[activity_level])
}
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_train<-read.csv("./train/subject_train.txt",sep="",header=FALSE)
X_train<-read.csv("./train/X_train.txt",sep="",header=FALSE)
y_train<-read.csv("./train/y_train.txt",sep="",header=FALSE)
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_test<-read.csv("./test/subject_test.txt",sep="",header=FALSE)
X_test<-read.csv("./test/X_test.txt",sep="",header=FALSE)
y_test<-read.csv("./test/y_test.txt",sep="",header=FALSE)
#Make the subject_train and subject_test dataframes factors and not integers to help
#with identification.  There are 21 in train group and 9 in test group - total 30 as per README.txt
#subject_test[,1]<-as.factor(subject_test[,1])
#subject_train[,1]<-as.factor(subject_train[,1])
#Make y_train factors to reflect that they refer to activity levels
#y_train[,1]<-as.factor(y_train[,1])
#y_test[,1]<-as.factor(y_test[,1])
#col bind y_train to X_train and put in traintemp variable
traintemp<-cbind(y_train,X_train)
#and now col bind subject_train to traintemp
traintemp<-cbind(subject_train,traintemp)
#col bind y_test to X_test and put in testtemp variable
testtemp<-cbind(y_test,X_test)
#and now col bind subject_test to testtemp
testtemp<-cbind(subject_test,testtemp)
#and bind rows together into combotemp dataframe
combotemp<-rbind(traintemp,testtemp)
#renumber columns
colnames(combotemp)<-1:ncol(combotemp)
make.names(colnames(combotemp),unique=FALSE)
#GetData Project Script
#Dale Millar - Riyadh, Saudi Arabia
#Set the working directory
setwd("~/Coursera/GetData/Project")
factor_lookup<-function(activity_level=1){
return (levels(activities)[activity_level])
}
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_train<-read.csv("./train/subject_train.txt",sep="",header=FALSE)
X_train<-read.csv("./train/X_train.txt",sep="",header=FALSE)
y_train<-read.csv("./train/y_train.txt",sep="",header=FALSE)
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_test<-read.csv("./test/subject_test.txt",sep="",header=FALSE)
X_test<-read.csv("./test/X_test.txt",sep="",header=FALSE)
y_test<-read.csv("./test/y_test.txt",sep="",header=FALSE)
#Make the subject_train and subject_test dataframes factors and not integers to help
#with identification.  There are 21 in train group and 9 in test group - total 30 as per README.txt
#subject_test[,1]<-as.factor(subject_test[,1])
#subject_train[,1]<-as.factor(subject_train[,1])
#Make y_train factors to reflect that they refer to activity levels
#y_train[,1]<-as.factor(y_train[,1])
#y_test[,1]<-as.factor(y_test[,1])
#col bind y_train to X_train and put in traintemp variable
traintemp<-cbind(y_train,X_train)
#and now col bind subject_train to traintemp
traintemp<-cbind(subject_train,traintemp)
#col bind y_test to X_test and put in testtemp variable
testtemp<-cbind(y_test,X_test)
#and now col bind subject_test to testtemp
testtemp<-cbind(subject_test,testtemp)
#and bind rows together into combotemp dataframe
combotemp<-rbind(traintemp,testtemp)
#renumber columns
colnames(combotemp)<-1:ncol(combotemp)
#Get the column names, strip off second column and make it a vector, then add names for
#subject and activity and then use the joined vector to name the columns
columnnames<-read.csv("features.txt",sep="",header=FALSE,stringsAsFactors=FALSE)
columnnames<-columnnames[,2]
newnames<-c("Subject_Person","Activity_Label")
columnnames<-c(newnames,columnnames)
columnnames
make.names(columnnames,unique=TRUE)
make.names(columnnames,unique=TRUE,allow_=TRUE)
#GetData Project Script
#Dale Millar - Riyadh, Saudi Arabia
#Set the working directory
setwd("~/Coursera/GetData/Project")
factor_lookup<-function(activity_level=1){
return (levels(activities)[activity_level])
}
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_train<-read.csv("./train/subject_train.txt",sep="",header=FALSE)
X_train<-read.csv("./train/X_train.txt",sep="",header=FALSE)
y_train<-read.csv("./train/y_train.txt",sep="",header=FALSE)
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_test<-read.csv("./test/subject_test.txt",sep="",header=FALSE)
X_test<-read.csv("./test/X_test.txt",sep="",header=FALSE)
y_test<-read.csv("./test/y_test.txt",sep="",header=FALSE)
#Make the subject_train and subject_test dataframes factors and not integers to help
#with identification.  There are 21 in train group and 9 in test group - total 30 as per README.txt
#subject_test[,1]<-as.factor(subject_test[,1])
#subject_train[,1]<-as.factor(subject_train[,1])
#Make y_train factors to reflect that they refer to activity levels
#y_train[,1]<-as.factor(y_train[,1])
#y_test[,1]<-as.factor(y_test[,1])
#col bind y_train to X_train and put in traintemp variable
traintemp<-cbind(y_train,X_train)
#and now col bind subject_train to traintemp
traintemp<-cbind(subject_train,traintemp)
#col bind y_test to X_test and put in testtemp variable
testtemp<-cbind(y_test,X_test)
#and now col bind subject_test to testtemp
testtemp<-cbind(subject_test,testtemp)
#and bind rows together into combotemp dataframe
combotemp<-rbind(traintemp,testtemp)
#renumber columns
colnames(combotemp)<-1:ncol(combotemp)
#Get the column names, strip off second column and make it a vector, then add names for
#subject and activity and then use the joined vector to name the columns
columnnames<-read.csv("features.txt",sep="",header=FALSE,stringsAsFactors=FALSE)
columnnames<-columnnames[,2]
newnames<-c("Subject_Person","Activity_Label")
columnnames<-c(newnames,columnnames)
make.names(columnnames,unique=TRUE,allow_=TRUE)
colnames(combotemp)<-columnnames
#Use grep to get column numbers for all the columns you what to keep - subject, activity, M(m)eans and std's
#Add all the column numbers into a keepers vector and reorder the vector for neatness.
wantedSubject<-grep("Subject_Person",names(combotemp))
wantedActivity<-grep("Activity_Label",names(combotemp))
wantedMean<-grep("Mean",names(combotemp))
wantedmean<-grep("mean",names(combotemp))
wantedstd<-grep("std",names(combotemp))
keepers<-c(wantedSubject,wantedActivity,wantedMean,wantedmean,wantedstd)
keepers<-sort(keepers)
#Create new data frame with only the means, std's and of course subject and activity names
combotemp1<-combotemp[,keepers]
library(dplyr)
tester<-tbl_df(combotemp1)
dim(tester)
head(tester)
head(select(tester,Subject_Person:tBodyAcc-mean()-X))
#GetData Project Script
#Dale Millar - Riyadh, Saudi Arabia
#Set the working directory
setwd("~/Coursera/GetData/Project")
factor_lookup<-function(activity_level=1){
return (levels(activities)[activity_level])
}
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_train<-read.csv("./train/subject_train.txt",sep="",header=FALSE)
X_train<-read.csv("./train/X_train.txt",sep="",header=FALSE)
y_train<-read.csv("./train/y_train.txt",sep="",header=FALSE)
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_test<-read.csv("./test/subject_test.txt",sep="",header=FALSE)
X_test<-read.csv("./test/X_test.txt",sep="",header=FALSE)
y_test<-read.csv("./test/y_test.txt",sep="",header=FALSE)
#Make the subject_train and subject_test dataframes factors and not integers to help
#with identification.  There are 21 in train group and 9 in test group - total 30 as per README.txt
#subject_test[,1]<-as.factor(subject_test[,1])
#subject_train[,1]<-as.factor(subject_train[,1])
#Make y_train factors to reflect that they refer to activity levels
#y_train[,1]<-as.factor(y_train[,1])
#y_test[,1]<-as.factor(y_test[,1])
#col bind y_train to X_train and put in traintemp variable
traintemp<-cbind(y_train,X_train)
#and now col bind subject_train to traintemp
traintemp<-cbind(subject_train,traintemp)
#col bind y_test to X_test and put in testtemp variable
testtemp<-cbind(y_test,X_test)
#and now col bind subject_test to testtemp
testtemp<-cbind(subject_test,testtemp)
#and bind rows together into combotemp dataframe
combotemp<-rbind(traintemp,testtemp)
#renumber columns
colnames(combotemp)<-1:ncol(combotemp)
#Get the column names, strip off second column and make it a vector, then add names for
#subject and activity and then use the joined vector to name the columns
columnnames<-read.csv("features.txt",sep="",header=FALSE,stringsAsFactors=FALSE)
columnnames<-columnnames[,2]
newnames<-c("Subject_Person","Activity_Label")
columnnames<-c(newnames,columnnames)
gsub("(","",columnnames)
gsub("(","",columnnames,perl=TRUE)
gsub("(","",columnnames)
gsub("(","",columnnames[1])
columnnames
gsub("D","E","Dale")
gsub("(","E","(ale")
gsub("-","E","-ale")
gsub(" ","E"," ale")
?make.names
make.names(columnnames,unique=TRUE)
#GetData Project Script
#Dale Millar - Riyadh, Saudi Arabia
#Set the working directory
setwd("~/Coursera/GetData/Project")
factor_lookup<-function(activity_level=1){
return (levels(activities)[activity_level])
}
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_train<-read.csv("./train/subject_train.txt",sep="",header=FALSE)
X_train<-read.csv("./train/X_train.txt",sep="",header=FALSE)
y_train<-read.csv("./train/y_train.txt",sep="",header=FALSE)
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_test<-read.csv("./test/subject_test.txt",sep="",header=FALSE)
X_test<-read.csv("./test/X_test.txt",sep="",header=FALSE)
y_test<-read.csv("./test/y_test.txt",sep="",header=FALSE)
#Make the subject_train and subject_test dataframes factors and not integers to help
#with identification.  There are 21 in train group and 9 in test group - total 30 as per README.txt
#subject_test[,1]<-as.factor(subject_test[,1])
#subject_train[,1]<-as.factor(subject_train[,1])
#Make y_train factors to reflect that they refer to activity levels
#y_train[,1]<-as.factor(y_train[,1])
#y_test[,1]<-as.factor(y_test[,1])
#col bind y_train to X_train and put in traintemp variable
traintemp<-cbind(y_train,X_train)
#and now col bind subject_train to traintemp
traintemp<-cbind(subject_train,traintemp)
#col bind y_test to X_test and put in testtemp variable
testtemp<-cbind(y_test,X_test)
#and now col bind subject_test to testtemp
testtemp<-cbind(subject_test,testtemp)
#and bind rows together into combotemp dataframe
combotemp<-rbind(traintemp,testtemp)
#renumber columns
colnames(combotemp)<-1:ncol(combotemp)
#Get the column names, strip off second column and make it a vector, then add names for
#subject and activity and then use the joined vector to name the columns
columnnames<-read.csv("features.txt",sep="",header=FALSE,stringsAsFactors=FALSE)
columnnames<-columnnames[,2]
newnames<-c("Subject_Person","Activity_Label")
columnnames<-c(newnames,columnnames)
#COLUMN NAMES ARE ILLEGAL
make.names(columnnames,unique=TRUE)
colnames(combotemp)<-columnnames
#GetData Project Script
#Dale Millar - Riyadh, Saudi Arabia
#Set the working directory
setwd("~/Coursera/GetData/Project")
factor_lookup<-function(activity_level=1){
return (levels(activities)[activity_level])
}
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_train<-read.csv("./train/subject_train.txt",sep="",header=FALSE)
X_train<-read.csv("./train/X_train.txt",sep="",header=FALSE)
y_train<-read.csv("./train/y_train.txt",sep="",header=FALSE)
#Put the train data sets into dataframes, seperator between variables is ""
#and there are no headers
subject_test<-read.csv("./test/subject_test.txt",sep="",header=FALSE)
X_test<-read.csv("./test/X_test.txt",sep="",header=FALSE)
y_test<-read.csv("./test/y_test.txt",sep="",header=FALSE)
#Make the subject_train and subject_test dataframes factors and not integers to help
#with identification.  There are 21 in train group and 9 in test group - total 30 as per README.txt
#subject_test[,1]<-as.factor(subject_test[,1])
#subject_train[,1]<-as.factor(subject_train[,1])
#Make y_train factors to reflect that they refer to activity levels
#y_train[,1]<-as.factor(y_train[,1])
#y_test[,1]<-as.factor(y_test[,1])
#col bind y_train to X_train and put in traintemp variable
traintemp<-cbind(y_train,X_train)
#and now col bind subject_train to traintemp
traintemp<-cbind(subject_train,traintemp)
#col bind y_test to X_test and put in testtemp variable
testtemp<-cbind(y_test,X_test)
#and now col bind subject_test to testtemp
testtemp<-cbind(subject_test,testtemp)
#and bind rows together into combotemp dataframe
combotemp<-rbind(traintemp,testtemp)
#renumber columns
colnames(combotemp)<-1:ncol(combotemp)
#Get the column names, strip off second column and make it a vector, then add names for
#subject and activity and then use the joined vector to name the columns
columnnames<-read.csv("features.txt",sep="",header=FALSE,stringsAsFactors=FALSE)
columnnames<-columnnames[,2]
newnames<-c("Subject_Person","Activity_Label")
columnnames<-c(newnames,columnnames)
#COLUMN NAMES ARE ILLEGAL
columnnames1<-make.names(columnnames,unique=TRUE)
colnames(combotemp)<-columnnames1
head(combotemp,3)
wantedSubject<-grep("Subject_Person",names(combotemp))
wantedActivity<-grep("Activity_Label",names(combotemp))
wantedMean<-grep("Mean",names(combotemp))
wantedmean<-grep("mean",names(combotemp))
wantedstd<-grep("std",names(combotemp))
keepers<-c(wantedSubject,wantedActivity,wantedMean,wantedmean,wantedstd)
keepers<-sort(keepers)
#Create new data frame with only the means, std's and of course subject and activity names
combotemp1<-combotemp[,keepers]
#Create a factor variable called activities for labeling purposes
activities<-c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING")
activities<-as.factor(activities)
#mutate a new column that calculates the activity name based on looking up the ActivityLevel column
#and call the new dataframe combotemp2
library(Hmisc)
library(plyr)
combotemp2<-mutate(combotemp1,Activities=activities[combotemp1[,2]])
head(combotemp2)
tester<-tbl_df(combotemp2)
dim(combotemp2)
head(select(combotemp2,Subject_Person:tBodyAcc.mean...X))
tester1<-group_by(tester,Subject_Person)
head(tester1)
tail(tester1)
tester1<-group_by(tester,Subject_Person)
arrange(tester1,Subject_Person)
tail(Tester1)
tail(tester1)
arrange(tester1,Subject_Person,Activity_Label)
tail(tester1)
dim(tester1)
tester2<-tester1[,1],tester1[,89],tester1[,3:88]
tester2<-c(tester1[,1],tester1[,89],tester1[,3:88])
head(tester2)
head(tester2,2)
